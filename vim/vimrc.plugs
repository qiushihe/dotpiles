call plug#begin('~/.vim/plugged')
Plug 'gmarik/Vundle.vim'
Plug 'bling/vim-airline'
Plug 'kien/ctrlp.vim'
Plug 'scrooloose/nerdtree'
Plug 'jistr/vim-nerdtree-tabs'
Plug 'rking/ag.vim'
Plug 'vimwiki/vimwiki', { 'branch': 'dev' }
Plug 'tpope/vim-fugitive'
Plug 'moll/vim-bbye'
Plug 'kchmck/vim-coffee-script'
Plug 'mtth/scratch.vim'
Plug 'sjl/badwolf'
Plug 'vim-scripts/AutoComplPop'
Plug 'mustache/vim-mustache-handlebars'

Plug 'Shougo/vimproc.vim', { 'do': 'make' }
Plug 'Shougo/unite.vim'
call plug#end()

" Configure airline
let g:airline#extensions#tabline#enabled = 1
" Disable left/right pointing arrow so we don't have
" to worry about installing custom fonts
let g:airline_right_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_left_alt_sep= ''
let g:airline_left_sep = ''

" Configure CtrlP
let g:ctrlp_clear_cache_on_exit = 0
" let g:ctrlp_map = '<c-t>'
let g:ctrlp_cmd = 'CtrlPMixed'
map <C-x><C-b> :CtrlPBuffer<CR>

" Configure NerdTree/Tabs
let g:nerdtree_tabs_open_on_gui_startup = 0
let NERDTreeMouseMode = 3
let NERDTreeRespectWildIgnore = 1
let NERDTreeWinSize = 36
let NERDTreeShowHidden = 1
map <leader>] :NERDTreeTabsToggle<CR>

" Configure Ag
map <C-c>sp :Ag<Space>

" Configure VimWiki
let g:vimwiki_global_ext = 0
let g:vimwiki_list = [{
  \ 'path': '~/Dropbox/Wiki/',
  \ 'syntax': 'markdown',
  \ 'ext': '.md' }]

" Configure Bbye
map <C-c>bd :Bdelete<CR>

" Configure scratch
map <C-c>ss :Scratch<CR>
map <C-c>si :ScratchInsert<CR>
map <C-c>sc :ScratchSelection<CR>

" Configure badwolf
let g:badwolf_darkgutter = 1
colorscheme badwolf

" Configure AutoComplPop
" Disable AutoComplpop in unite buffers
function NoOps(context)
  return 0
endfunction
let behavs = { 'unite': [] }
call add(behavs.unite, { 'command': "", 'meets': 'NoOps', 'repeat' : 0, 'onPopupClose': 'NoOps' })
let g:acp_behavior = {}
call extend(g:acp_behavior, behavs, 'keep')

" Configure unite
call unite#custom#source('file,file_rec,file_rec/async,file_mru,grep', 'ignore_globs', split(&wildignore, ','))
if executable('ag')
  let g:unite_source_grep_command = 'ag'
  let g:unite_source_grep_default_opts = '--nocolor --nogroup --column'
  let g:unite_source_grep_recursive_opt = ''

  let g:unite_source_rec_async_command  = 'ag --nocolor --nogroup --ignore ".hg" --ignore ".svn" --ignore ".git" --ignore ".bzr" --ignore ".meteor" --hidden -g ""'
  let g:unite_source_file_async_command = 'ag --nocolor --nogroup --ignore ".hg" --ignore ".svn" --ignore ".git" --ignore ".bzr" --ignore ".meteor" --hidden -g ""'
endif
nmap <C-t> :Unite -no-split -start-insert file_rec/async<CR>
" nmap <C-c>sp :Unite -no-split grep:.<CR>

autocmd FileType unite call s:unite_settings()
function! s:unite_settings()
  nmap <buffer> <ESC> <Plug>(unite_exit)
endfunction
