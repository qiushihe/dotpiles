call plug#begin('~/.vim/plugged')
Plug 'gmarik/Vundle.vim'

Plug 'moll/vim-bbye'
Plug 'vim-scripts/AutoComplPop'
Plug 'mhinz/vim-signify'
Plug 'terryma/vim-expand-region'

Plug 'kchmck/vim-coffee-script'
Plug 'wavded/vim-stylus'
Plug 'mustache/vim-mustache-handlebars'
Plug 'tpope/vim-haml'
Plug 'tpope/vim-surround'

Plug 'scrooloose/nerdtree'
Plug 'jistr/vim-nerdtree-tabs'

Plug 'itchyny/lightline.vim'
Plug 'itchyny/vim-gitbranch'

Plug 'Shougo/vimproc.vim', { 'do': 'make' }
Plug 'Shougo/unite.vim'

"Plug '~/Projects/unite-filelist'
Plug 'qiushihe/unite-filelist'

"Plug '~/Projects/wmyy.vim'
Plug 'qiushihe/wmyy.vim'

Plug 'sjl/badwolf'
call plug#end()

" Configure lightline/vim-gitbranch
let g:lightline = {
  \ 'component': {
    \ 'gitbranch': '%{"\u2387 " . gitbranch#name()}',
  \ }
\ }

let g:lightline.active = {
  \ 'left': [
    \ [ 'mode', 'paste' ],
    \ [ 'gitbranch' ],
    \ [ 'readonly', 'filename', 'modified' ]
  \ ], 'right': [
    \ [ 'lineinfo' ],
	  \ [ 'percent' ],
		\ [ 'fileformat', 'fileencoding', 'filetype' ]
  \ ]
\ }

" Configure NerdTree/Tabs
let g:nerdtree_tabs_open_on_gui_startup = 0
let NERDTreeMouseMode = 3
let NERDTreeRespectWildIgnore = 1
let NERDTreeWinSize = 36
let NERDTreeShowHidden = 1
map <leader>T :NERDTreeTabsToggle<CR>

" Configure Bbye
map <leader>bd :Bdelete!<CR>

" Configure AutoComplPop
" Disable AutoComplpop in unite buffers
function NoOps(context)
  return 0
endfunction
let behavs = { 'unite': [] }
call add(behavs.unite, { 'command': "", 'meets': 'NoOps', 'repeat' : 0, 'onPopupClose': 'NoOps' })
let g:acp_behavior = {}
call extend(g:acp_behavior, behavs, 'keep')

" Configure unite
call unite#custom#source('file,file_rec,file_rec/async,file_mru,grep', 'ignore_globs', split(&wildignore, ','))

if executable('pt')
  let g:unite_source_grep_command = 'pt'
  let g:unite_source_grep_default_opts = '--nogroup --nocolor'
  let g:unite_source_grep_recursive_opt = ''
  let g:unite_source_grep_encoding = 'utf-8'
endif
let g:unite_source_grep_max_candidates = 99999

nmap <leader>t :Unite -no-split -no-resize -start-insert filelist<CR>
nmap <leader>bl :Unite -no-split -no-resize -start-insert buffer<CR>
nmap <leader>sp :Unite -no-split -no-resize grep:.<CR>
nmap <leader>re :UniteResume -no-split -no-resize<CR>

autocmd FileType unite call s:unite_settings()
function! s:unite_settings()
  nmap <buffer> <ESC> <Plug>(unite_exit)
endfunction

" Configure signify
let g:signify_sign_show_count = 0
let g:signify_update_on_focusgained = 1
let g:signify_sign_change = '~'
let g:signify_sign_changedelete = '~'
let g:signify_sign_add = '+'
let g:signify_sign_delete = '_'
let g:signify_sign_delete_first_line = 'â€¾'

" Configure Wmyy
nnoremap <leader><S-K> :WmyySwapUp<CR>
nnoremap <leader><S-J> :WmyySwapDown<CR>
nnoremap <leader><S-H> :WmyySwapLeft<CR>
nnoremap <leader><S-L> :WmyySwapRight<CR>

" Configure badwolf
let g:badwolf_darkgutter = 1

" Set active colour scheme
colorscheme badwolf
