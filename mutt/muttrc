# vim: set ts=8 sw=4 tw=0 ft=muttrc :

macro index 1 '<sync-mailbox><enter-command>source ~/.mutt/accounts/qiushihe@me.com/account<enter><change-folder>!<enter>'
macro index 2 '<sync-mailbox><enter-command>source ~/.mutt/accounts/billy@metalabdesign.com/account<enter><change-folder>!<enter>'
macro index 3 '<sync-mailbox><enter-command>source ~/.mutt/accounts/billy@railcs.com/account<enter><change-folder>!<enter>'

auto_view text/html
alternative_order text/enriched text/plain text

set pgp_use_gpg_agent        = yes
#set pgp_autosign             = yes
set pgp_verify_sig           = yes
set pgp_sign_as              = 0xBC9C8902
set pgp_replyencrypt         = yes
set pgp_timeout              = 3600
set pgp_good_sign            = "^gpg: Signed by "
set pgp_auto_decode          = yes

#--passphrase-fd 0 is required if you're not running gpg-agent
#set pgp_decode_command       = "gpg %?p?--passphrase-fd 0? --no-verbose --batch --output - %f"
#set pgp_decrypt_command      = "gpg --passphrase-fd 0 --no-verbose --batch --output - %f"
#set pgp_sign_command         = "gpg --no-verbose --batch --output - --passphrase-fd 0 --armor --detach-sign --textmode %?a?-u %a? %f"
#set pgp_clearsign_command    = "gpg --no-verbose --batch --output - --passphrase-fd 0 --armor --textmode --clearsign %?a?-u %a? %f"
#set pgp_encrypt_sign_command = "/usr/lib/mutt/pgpewrap gpg --passphrase-fd 0 --batch --quiet --no-verbose --textmode --output - --encrypt --sign %?a?-u %a? --armor --always-trust --encrypt-to 0xBC9C8902 -- -r %r -- %f"

set pgp_decode_command       = "gpg --no-verbose --batch --output - %f"
set pgp_decrypt_command      = "gpg --no-verbose --batch --output - %f"
set pgp_sign_command         = "gpg --no-verbose --batch --output - --armor --detach-sign --textmode %?a?-u %a? %f"
set pgp_clearsign_command    = "gpg --no-verbose --batch --output - --armor --textmode --clearsign %?a?-u %a? %f"
set pgp_encrypt_sign_command = "/usr/lib/mutt/pgpewrap gpg --batch --quiet --no-verbose --textmode --output - --encrypt --sign %?a?-u %a? --armor --always-trust -- -r %r -- %f"

set pgp_verify_command       = "gpg --no-verbose --batch --output - --verify %s %f"
set pgp_encrypt_only_command = "/usr/lib/mutt/pgpewrap gpg --batch --quiet --no-verbose --output - --encrypt --textmode --armor --always-trust -- -r %r -- %f"
set pgp_import_command       = "gpg --no-verbose --import -v %f"
set pgp_export_command       = "gpg --no-verbose --export --armor %r"
set pgp_verify_key_command   = "gpg --no-verbose --batch --fingerprint --check-sigs %r"
set pgp_list_pubring_command = "gpg --no-verbose --batch --with-colons --list-keys %r"
set pgp_list_secring_command = "gpg --no-verbose --batch --with-colons --list-secret-keys %r"

# passwd management
set my_decrypt=`gpg -o $HOME/.mutt/accounts/passwords.gpg.tmp -d $HOME/.mutt/accounts/passwords.gpg`
set my_qiushiheATmeDOTcom=`awk '/qiushihe@me.com:/ {print $2}' $HOME/.mutt/accounts/passwords.gpg.tmp`
set my_billyATmetalabdesignDOTcom=`awk '/billy@metalabdesign.com:/ {print $2}' $HOME/.mutt/accounts/passwords.gpg.tmp`
set my_billyATrailcsDOTcom=`awk '/billy@railcs.com:/ {print $2}' $HOME/.mutt/accounts/passwords.gpg.tmp`
set my_rm=`rm -f $HOME/.mutt/accounts/passwords.gpg.tmp`

# default
source $HOME/.mutt/accounts/qiushihe@me.com/account

